name: CI
on: [push, pull_request]
env:
  ZEPHYR_TOOLCHAIN_VARIANT: gnuarmemb
  macOS: /usr/local/Cellar/gcc-arm-none-eabi-83/20190709
  Linux: /opt/gcc-arm-none-eabi-8-2019-q3-update

jobs:
  build_hello_world:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: (macOS) Install brew dependencies
      if: runner.os == 'macOS'
      run: |
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        brew bundle
    - name: (Linux) Install dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt install wget file ninja-build gperf ccache dfu-util make gdb-multiarch xz-utils
        # install device-tree-compiler
        wget http://mirrors.kernel.org/ubuntu/pool/main/d/device-tree-compiler/device-tree-compiler_1.4.7-1_amd64.deb
        sudo dpkg -i device-tree-compiler_1.4.7-1_amd64.deb
        # install cmake
        sudo wget -P /opt -nv https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-Linux-x86_64.tar.gz
        sudo tar zxf /opt/cmake-3.16.2-Linux-x86_64.tar.gz -C /opt
        echo $PATH
        sudo ln -s /opt/cmake-3.16.2-Linux-x86_64/bin/* /usr/local/sbin
        cmake --version
        # gcc-arm-none-eabi
        sudo wget -P /opt -nv https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2019q3/RC1.1/gcc-arm-none-eabi-8-2019-q3-update-linux.tar.bz2
        sudo tar jxf /opt/gcc-arm-none-eabi-8-2019-q3-update-linux.tar.bz2 -C /opt
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install pipenv
        pipenv install
    - name: Install west dependencies
      run: pipenv run west update
    - name: Build hello_world sample
      env:
        GNUARMEMB_TOOLCHAIN_PATH: ${{ env[runner.os] }}
      run: pipenv run west build samples/hello_world
    